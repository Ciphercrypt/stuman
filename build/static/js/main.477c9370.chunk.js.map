{"version":3,"sources":["Pages/Chat.jsx","redux/actionTypes.js","redux/validation/is-empty.js","redux/reducer/facultyReducer.js","redux/reducer/adminReducer.js","redux/reducer/studentReducer.js","redux/reducer/errorReducerHelper.js","redux/reducer/errorReducer.js","redux/reducer/rootReducer.js","redux/store.js","redux/utils/setAuthToken.js","redux/action/facultyAction.js","redux/action/adminAction.js","redux/action/studentAction.js","Pages/LoginPage.jsx","Components/HomeHelper.jsx","Pages/StudentHome.jsx","Pages/StudentDetails.jsx","Components/AdminHomeHelper.jsx","Pages/AdminAddStudent.jsx","Pages/AdminAddFaculty.jsx","Pages/AdminAddSubject.jsx","Pages/StudentAttendencePage.jsx","Pages/StudentUpdatePassword.jsx","Pages/ForgotPassword.jsx","Pages/RecieverUserDetails.jsx","Pages/StudentUpdateProfile.jsx","Pages/Student/StudentSubjectList.jsx","Pages/Student/StudentTestPerformance.jsx","Pages/Admin/AdminAddAdmin.jsx","Pages/Admin/AdminGetAllFaculty.jsx","Pages/Admin/AdminGetAllStudents.jsx","Pages/Admin/AdminGetAllSubjects.jsx","Pages/Admin/AdminHome.jsx","App.js","index.js"],"names":["socket","SET_ERRORS","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","faculty","flag","updateProfileFlag","allSubjectCodeList","fetchedStudents","fetchedStudentsHelper","facultyReducer","state","action","type","payload","admin","adminAddFacultyFlag","adminAddStudentFlag","adminAddAdminFlag","adminAddSubjectFlag","allSubject","allFaculty","allStudent","adminReducer","student","alongsideStudent","chatHistory","regNumStudent","privateChat","privateChat2","newerChats","previousChats","allSubjects","attendence","allMarks","studentReducer","setErrorsHelper","setErrors","combineReducers","error","errorReducer","errorHelper","errorReducerHelper","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","setFaculty","data","url","setAdmin","adminGetAllFacultyHelper","adminGetAllStudentHelper","adminGetAllSubjectHelper","adminLogout","dispatch","localStorage","removeItem","setStudent","getStudentByRegNameHelper","privateConversation","privateConversation2","newerChatsHelper","previousChatsHelper","getAllSubjectsHelper","fetchAttendenceHelper","getMarksHelper","studentUpdate","updatedData","a","method","console","log","message","studentLogout","LoginPage","useSelector","useDispatch","useState","registrationNumber","setRegistrationNumber","password","setPassword","setError","isLoading","setIsLoading","history","useHistory","useEffect","push","className","noValidate","onSubmit","e","adminCredential","preventDefault","setItem","decoded","jwt_decode","response","htmlFor","onChange","target","classnames","id","class","role","Home","name","setName","receiverName","senderName","result","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","toUpperCase","aria-haspopup","aria-labelledby","style","listStyle","onClick","HomeHelper","width","src","avatar","alt","email","dob","year","department","section","batch","gender","studentMobileNumber","fatherName","fatherMobileNumber","StudentDetails","setDepartment","setYear","setSection","setResult","filterStudentHelper","filterByNameHelper","formHandler","placeholder","map","res","index","key","scope","senderRegistrationNumber","receiverRegistrationNumber","obj","AdminAddStudent","setEmail","setDob","setGender","setContactNumber","setFatherName","setFatherContactNumber","aadharCard","AdminHomeHelper","studentCredential","split","reverse","join","alert","required","AdminAddFaculty","designation","setDesignation","facultyMobileNUmber","setFacultyMobileNumber","facultyCredential","AdminAddSubject","subjectName","setSubjectName","subjectCode","setSubjectCode","totalLectures","setTotalLectures","subjectCredential","maxHours","lectureAttended","absentHours","totalLecturesByFaculty","StudentUpdatePassword","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","passwordData","withRouter","props","user","setUser","otp","setOtp","errors","helper","setHelper","match","params","newPasswordWithOtp","submitOTPStudent","submitOTPFaculty","studentEmail","getOTPFaculty","aria-describedby","Chat","room1","setRoom1","room2","setRoom2","setReceiverRegistrationNumber","setMessage","messageArray","setMessageArray","olderMessages","setOlderMessages","ENDPOINT","temp","room","io","tempArr","input","value_1","value_2","swap","tempRoom2","roomId","getPrivateConversation2","emit","on","off","sender","messageObj","senderId","_id","messageobj","createdAt","RecieverUserDetails","getStudentByRegName","setAvatar","setModal","formData","FormData","append","accept","files","img","StudentSubjectList","StudentTestPerformance","CycleTest1","subject","marks","totalMarks","CycleTest2","Semester","toFixed","AdminAddAdmin","contactNumber","adminCredentails","AdminGetAllFaculty","form-inline","adminGetAllFaculty","joiningYear","searchCredentials","AdminGetAllSubjects","adminGetAllSubject","AdminHome","window","facultyJwtToken","currentTime","Date","now","exp","location","studentJwtToken","setStudentUser","adminJwtToken","setAdminUser","App","exact","path","component","StudentUpdateProfile","AdminGetAllStudent","AdminGetAllSubject","StudentAttendencePage","StudentTestPerformace","ForgotPassword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.477c9370.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport HomeHelper from '../Components/HomeHelper'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { sendMessage, getPrivateConversation, getPrivateConversation2} from '../redux/action/studentAction'\nimport io from 'socket.io-client';\nimport { useHistory } from 'react-router-dom';\n\n//Swap HelperFunction\nfunction swap(input, value_1, value_2) {\n    var temp = input[value_1];\n    input[value_1] = input[value_2];\n    input[value_2] = temp;\n}\n\n\nlet socket;\n\n\nconst Chat = (props) => {\n    \n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [room1, setRoom1] = useState(\"\")\n    const [room2, setRoom2] = useState(\"\")\n    const [receiverRegistrationNumber, setReceiverRegistrationNumber] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [messageArray, setMessageArray] = useState([])\n    const [olderMessages, setOlderMessages] = useState([])\n    const ENDPOINT = 'https://avi-stuman.herokuapp.com'\n\n    useEffect(() => {\n        let temp = props.match.params.room\n        socket = io(ENDPOINT)\n        let tempArr = temp.split(\".\")\n        setReceiverRegistrationNumber(tempArr[0])\n        setRoom1(temp)\n        swap(tempArr, 0, 1)\n        let tempRoom2 = tempArr[0] + '.' + tempArr[1]\n        setRoom2(tempRoom2)\n    }, [ENDPOINT, props.match.params.room])\n    \n\n    useEffect(() => {\n        dispatch(getPrivateConversation(room1))\n        dispatch(getPrivateConversation2(room2))\n        socket = io(ENDPOINT)\n        socket.emit('join room', {\n            room1,\n            room2\n        })\n        socket.on(\"new Message\", (data) => {\n            setMessageArray([...messageArray, data])\n        })\n        return () => {\n            socket.emit('disconnect')\n            socket.off()\n        }\n    }, [room1, room2])\n\n\n    \n    const formHandler = (e) => {\n        e.preventDefault()\n        if (message.trim().length > 0) {\n            socket.emit(\"private message\", {\n                sender: store.student.student.student.name,\n                message,\n                room: room1\n            })\n            setMessage(\"\")\n            let messageObj = {\n                roomId: room1,\n                senderName: store.student.student.student.name,\n                senderId: store.student.student.student._id,\n                message,\n                senderRegistrationNumber: store.student.student.student.registrationNumber,\n                receiverRegistrationNumber\n            }\n            dispatch(sendMessage(room1,messageObj))\n        }\n        else {\n            alert(\"Can't send empty message\")\n        }\n    }\n\n\n    useEffect(() => {\n        socket.on(\"new Message\", (data) => {\n            setOlderMessages(store.student.privateChat)\n            setMessageArray([...messageArray, data])\n        })\n        \n    },[messageArray,olderMessages])\n   \n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-5\">\n                            <form className=\"form-inline\" onSubmit={formHandler}>\n                                <div className=\"form-group \">\n                                    {/* <input value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type here..\" type=\"text\" className=\"form-control\" /> */}\n                                    <textarea value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type here..\" type=\"text\" className=\"form-control\" />\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary ml-1 \">Send</button>\n                            </form>\n                        </div>\n                        <div className=\"col-md-7\">\n                            {\n                                store.student.privateChat.map((obj,index) =>\n                                    <div key={index}>\n                                        <p>{obj.senderName}: {obj.message}, {obj.createdAt}</p>\n                                    </div>\n                                )\n                            }\n                            {messageArray.map((obj, index) =>\n                                <p key={index}>{obj.sender}: {obj.message}</p>\n                            )}\n\n                        </div>\n\n                    </div>\n\n                </div>\n            </> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default Chat\n","//ERROR\nexport const SET_ERRORS = \"SET_ERRORS\"\nexport const SET_ERRORS_HELPER = \"SET_ERRORS_HELPER\"\nexport const SET_FLAG = \"SET_FLAG\"\n\n//ADMIN\nexport const SET_ADMIN = \"SET_ADMIN\"\nexport const GET_SUBJECTS = \"GET_SUBJECTS\"\n\n\n\n//FACULTY\nexport const SET_FACULTY = \"SET_FACULTY\"\nexport const FACULTY_UPDATE_PASSWORD = \"FACULTY_UPDATE_PASSWORD\"\n\n//STUDENT\nexport const SET_STUDENT = \"SET_STUDENT\"\nexport const STUDENT_UPDATE_PASSWORD = \"STUDENT_UPDATE_PASSWORD\"\nexport const SET_OTP = \"SET_OTP\"\n\n\n","const isEmpty = value =>\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;\n","\nimport { SET_FACULTY } from '../actionTypes'\n\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    faculty: {},\n    flag: false,\n    updateProfileFlag: false,\n    allSubjectCodeList: [],\n    fetchedStudents: [],\n    fetchedStudentsHelper: true\n}\n\n\nconst facultyReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FACULTY: {\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                faculty: action.payload\n            }\n        }\n        case \"FETCH_STUDENTS\": {\n            return {\n                ...state,\n                fetchedStudentsHelper: false,\n                fetchedStudents: action.payload\n            }\n        }\n        case \"FACULTY_UPDATE_PROFILE_FLAG\": {\n            return {\n                ...state,\n                updateProfileFlag: action.payload\n            }\n        }\n        case \"GET_SUBJECTCODE_LIST\": {\n            return {\n                ...state,\n                allSubjectCodeList: action.payload\n            }\n        }\n        case \"HELPER\": {\n            return {\n                ...state,\n                fetchedStudentsHelper: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default facultyReducer","\nimport { SET_ADMIN, GET_SUBJECTS } from '../actionTypes'\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    admin: {},\n    adminAddFacultyFlag: false,\n    adminAddStudentFlag: false,\n    adminAddAdminFlag: false,\n    adminAddSubjectFlag: false,\n    allSubject: {},\n    allFaculty: [],\n    allStudent: [],\n    allSubject: []\n}\n\n\n\n\n\n\nconst adminReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ADMIN: \n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                admin: action.payload\n            }\n        case GET_SUBJECTS: {\n            return {\n                ...state,\n                allSubject: action.payload\n            }\n        }\n        case \"ADMIN_ADD_FACULTY_FLAG\": {\n            return {\n                ...state,\n                adminAddFacultyFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_STUDENT_FLAG\": {\n            return {\n                ...state,\n                adminAddStudentFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_SUBJECT_FLAG\": {\n            return {\n                ...state,\n                adminAddSubjectFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_ADMIN_FLAG\": {\n            return {\n                ...state,\n                adminAddAdminFlag: action.payload\n            }\n        }\n        case \"GET_ALL_FACULTY\": {\n            return {\n                ...state,\n                allFaculty: action.payload\n            }\n        }\n        case \"GET_ALL_STUDENT\": {\n            return {\n                ...state,\n                allStudent: action.payload\n            }\n        }\n        case \"GET_ALL_SUBJECT\": {\n            return {\n                ...state,\n                allSubject: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n\n\n\nexport default adminReducer","\nimport { SET_STUDENT, SET_OTP, SET_FLAG } from '../actionTypes'\n\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    student: {},\n    alongsideStudent: {},\n    flag: false,\n    chatHistory: [],\n    regNumStudent: {},\n    privateChat: [],\n    privateChat2: [],\n    newerChats: [],\n    previousChats: [],\n    allSubjects: [],\n    attendence: [], \n    allMarks: {}\n}\n\n\nconst studentReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_STUDENT:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                student: action.payload\n            }\n        case \"CHAT_HELPER\":\n            return {\n                ...state,\n                alongsideStudent: action.payload\n            }\n        case SET_FLAG:\n            return {\n                ...state,\n                flag: true\n            }\n        case \"SET_CHAT\":\n            return {\n                ...state, \n                chatHistory : [state.chatHistory, action.payload]\n            }\n        case \"GET_STUDENT_BY_REG_NUM\": {\n            return {\n                ...state,\n                regNumStudent: action.payload\n            }\n        }\n        case \"GET_PRIVATE_CONVERSATION\": {\n            return {\n                ...state,\n                privateChat: action.payload\n            }\n        }\n        case \"GET_PRIVATE_CONVERSATION2\": {\n            return {\n                ...state,\n                privateChat2: action.payload\n            }\n        }\n        case \"GET_NEWER_CHATS\": {\n            return {\n                ...state,\n                newerChats: action.payload\n            }\n        }\n        case \"GET_PREVIOUS_CHATS\": {\n            return {\n                ...state,\n                previousChats: action.payload\n            }\n        }\n        case \"GET_ALL_SUBJECTS\": \n            return {\n                ...state,\n                allSubjects: action.payload\n            }\n        \n        case \"GET_ATTENDENCE\": \n            return {\n                ...state,\n                attendence: action.payload\n            }\n        \n        case \"GET_MARKS\": \n            return {\n                ...state,\n                allMarks: action.payload\n            }\n        \n        default:\n            return state\n        \n    } \n}\n\nexport default studentReducer","import { SET_ERRORS_HELPER } from '../actionTypes';\n\nconst initialState = {};\n\nconst setErrorsHelper = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ERRORS_HELPER:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nexport default setErrorsHelper\n\n\n","import { SET_ERRORS } from '../actionTypes';\n\nconst initialState = {};\n\nconst setErrors = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default setErrors\n\n\n","import { combineReducers } from 'redux';\nimport facultyReducer from './facultyReducer'\nimport adminReducer from './adminReducer'\nimport studentReducer from './studentReducer'\nimport errorReducerHelper from './errorReducerHelper'\nimport errorReducer from './errorReducer'\n\n\nexport default combineReducers({\n    faculty: facultyReducer,\n    admin: adminReducer,\n    student: studentReducer,\n    error: errorReducer,\n    errorHelper: errorReducerHelper\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;\n\n\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        // Apply to every request\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        // Delete auth header\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport { SET_FACULTY, SET_ERRORS, SET_FLAG, SET_ERRORS_HELPER } from '../actionTypes'\n\nconst setFaculty = (data) => {\n    return {\n        type: SET_FACULTY,\n        payload: data\n    }\n}\n\nconst url = \"https://avi-stuman.herokuapp.com\"\n\nconst fetchStudentsHelper = (data) => {\n    return {\n        type: \"FETCH_STUDENTS\",\n        payload: data\n    }\n}\n\nconst subjectCodeListHelper = (data) => {\n    return {\n        type: \"GET_SUBJECTCODE_LIST\",\n        payload: data\n    }\n}\n\n\nexport const facultyLogin = (facultyCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/login\",\n                data: facultyCredential\n            })\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('facultyJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setFaculty(decoded))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const facultyUpdatePassword = (passwordData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/updatePassword\",\n                data: passwordData\n            })\n            alert(\"Password Updated Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const getOTPFaculty = (studentEmail) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + '/api/faculty/forgotPassword',\n                data: studentEmail\n            })\n            alert(\"Otp has been sent to your email\")\n            dispatch({ type: SET_FLAG })\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const submitOTPFaculty = (newPasswordWithOtp, history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/postOTP\",\n                data: newPasswordWithOtp\n            })\n            alert(\"Password Update, kindly login with updated password\")\n            history.push('/')\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const fetchStudents = (department, year, section) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/fetchStudents\",\n                data: { department, year, section}\n            })\n            dispatch(fetchStudentsHelper(data.result))\n            dispatch(subjectCodeListHelper(data.subjectCode))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nconst facultyUpdateProfileFlag = (data) => {\n    return {\n        type: \"FACULTY_UPDATE_PROFILE_FLAG\",\n        payload: data\n    }\n}\n\nexport const facultyUpdate = (updatedData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + `/api/faculty/updateProfile`,\n                data: updatedData\n            })\n            dispatch(facultyUpdateProfileFlag(true))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const markAttendence = (selectedStudents, subjectCode, department, year,\n           section) => {\n    return async(dispatch) => {\n        try {\n                await axios({\n                method: 'Post',\n                    url: url + \"/api/faculty/markAttendence\",\n                data: { selectedStudents, subjectCode, department, year, section}\n                })\n            alert(\"attendence has been marked successfully\")\n            dispatch({\n                type: \"HELPER\",\n                payload: true\n            })\n        }\n        catch (err) {\n           console.log(\"Error in marking attendence, faculty action\", err.message)\n        }\n    }\n}\n\nexport const uploadMarks = (subjectCode, exam, totalMarks, marks,\n    department, year, section, ) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/uploadMarks\",\n                data: {\n                    subjectCode, exam, totalMarks, marks, department, year, section,\n                    }\n            })\n            alert(\"Mark uploaded successfully\")\n            dispatch({\n                type: \"HELPER\",\n                payload: true\n            })\n           \n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const setFacultyUser = data => {\n    return {\n        type: SET_FACULTY,\n        payload: data\n    };\n}\n\nexport const facultyLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('facultyJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setFaculty({}));\n    };\n\n","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport {\n    SET_ADMIN, SET_ERRORS, \n    GET_SUBJECTS\n} from '../actionTypes'\n\nconst url = \"https://avi-stuman.herokuapp.com\"\n\nconst setAdmin = (data) => {\n    return {\n        type: SET_ADMIN,\n        payload: data\n    }\n}\n\nconst adminAddFacultyFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_FACULTY_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddStudentFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_STUDENT_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddSubjectFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_SUBJECT_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddAdminFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_ADMIN_FLAG\",\n        payload: data\n    }\n}\n\nconst getSubjctsHelper = (data) => {\n    return {\n        type: GET_SUBJECTS,\n        payload: data\n    }\n}\n\nconst adminGetAllFacultyHelper = (data) => {\n    return {\n        type: \"GET_ALL_FACULTY\",\n        payload: data\n    }   \n}\n\nconst adminGetAllStudentHelper = (data) => {\n    return {\n        type: \"GET_ALL_STUDENT\",\n        payload: data\n    }\n}\n\n\nconst adminGetAllSubjectHelper = (data) => {\n    return {\n        type: \"GET_ALL_SUBJECT\",\n        payload: data\n    }\n}\n\nexport const adminLogin = (adminCredential) => {\n    return async (dispatch) => {\n        try {\n            console.log(\"Admin Login Credentials\", adminCredential)\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/login\",\n                data: adminCredential\n            })\n            console.log(\"login response\", data)\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('adminJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setAdmin(decoded))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllSubjects = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/admin/getSubjects\",\n            })\n            dispatch(getSubjctsHelper(data))\n        }\n        catch (err) {\n            console.log(\"Error in getting all subjects\", err.message)\n        }\n    }\n}\n\nexport const adminAddFaculty = (facultyCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addFaculty\",\n                data: facultyCredential\n            })\n            dispatch(adminAddFacultyFlag(true))\n            alert(\"Faculty Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminAddStudent = (studentCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addStudent\",\n                data: studentCredential\n            })\n            dispatch(adminAddStudentFlag(true))\n            alert(\"Student Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminAddSubject = (subjectCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addSubject\",\n                data: subjectCredential\n            })\n            dispatch(adminAddSubjectFlag(true))\n            alert(\"Subject Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const adminAddAdmin = (adminCredentails) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addAdmin\",\n                data: adminCredentails\n            })\n            dispatch(adminAddAdminFlag(true))\n            alert(\"Admin Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const adminGetAllFaculty = (department) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllFaculty\",\n                data: department\n            })\n            dispatch(adminGetAllFacultyHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllStudent = (searchCredentials) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllStudent\",\n                data: searchCredentials\n            })\n            dispatch(adminGetAllStudentHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllSubject = (department) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllSubject\",\n                data: department\n            })\n            dispatch(adminGetAllSubjectHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const setAdminUser = data => {\n    return {\n        type: SET_ADMIN,\n        payload: data\n    };\n}\n\nexport const adminLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('adminJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setAdmin({}));\n    };","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport { SET_STUDENT, SET_ERRORS_HELPER, SET_ERRORS, STUDENT_UPDATE_PASSWORD, SET_OTP, SET_FLAG } from '../actionTypes'\n\nconst url = \"https://avi-stuman.herokuapp.com\"\n\nexport const setChatHistory = (data) => {\n    return {\n        type: \"SET_CHAT\",\n        payload: data\n    }\n}\n\nconst setStudent = (data) => {\n    return {\n        type: SET_STUDENT,\n        payload: data\n    }\n}\n\nconst chatHelp = (data) => {\n    return {\n        type: \"CHAT_HELPER\",\n        payload: data\n    }\n}\n\nconst getStudentByRegNameHelper = (data) => {\n    return {\n        type: \"GET_STUDENT_BY_REG_NUM\",\n        payload: data\n    }\n}\n\n\nconst privateConversation = (data) => {\n    return {\n        type: \"GET_PRIVATE_CONVERSATION\",\n        payload: data\n    }\n}\n\nconst privateConversation2 = (data) => {\n    return {\n        type: \"GET_PRIVATE_CONVERSATION2\",\n        payload: data\n    }\n}\n\nconst newerChatsHelper = (data) => {\n    return {\n        type: \"GET_NEWER_CHATS\",\n        payload: data\n    }\n}\n\nconst previousChatsHelper = (data) => {\n    return {\n        type: \"GET_PREVIOUS_CHATS\",\n        payload: data\n    }\n}\n\nconst getAllSubjectsHelper = (data) => {\n    return {\n        type: \"GET_ALL_SUBJECTS\",\n        payload: data\n    }\n}\n\nconst fetchAttendenceHelper = (data) => {\n    return {\n        type: \"GET_ATTENDENCE\",\n        payload: data\n    }\n}\n\nconst getMarksHelper = (data) => {\n    return {\n        type: \"GET_MARKS\",\n        payload: data\n    }\n    \n}\n\nexport const studentLogin = (studentCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/login\",\n                data: studentCredential\n            })\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('studentJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setStudent(decoded))\n           \n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const studentUpdatePassword = (passwordData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/updatePassword\",\n                data: passwordData\n            })\n            alert(\"Password Updated Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const chatHelper = (name) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/getStudentByName\",\n                data: name\n            })\n            dispatch(chatHelp(data.result))\n        }\n        catch (err) {\n            console.log('error in recent',err.message)\n        }\n    }\n}\n\nexport const getStudentByRegName = (registrationNumber) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/getStudentByRegName\",\n                data: { registrationNumber }\n            })\n            dispatch(getStudentByRegNameHelper(data.result))\n        }\n        catch (err) {\n            console.log('Error in getting student by registration number', err.message)\n        }\n    }\n    \n}\n\n\nexport const getOTPStudent = (studentEmail) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + '/api/student/forgotPassword',\n                data: studentEmail\n            })\n            alert(\"Otp has been sent to your email\")\n            dispatch({type:SET_FLAG})\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const submitOTPStudent = (newPasswordWithOtp, history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/postOTP\" ,\n                data:newPasswordWithOtp\n            })\n            alert(\"Password Update, kindly login with updated password\")\n            history.push('/')\n        }\n        catch (err){\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const sendMessage = (room,messageobj) => {\n    return async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + `/api/student/chat/${room}`,\n                data: messageobj\n            })\n        }\n        catch (err) {\n            console.log(\"Error in sending message\",err.message)\n        }\n    }\n}\n\n\nexport const getPrivateConversation = (roomId) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + `/api/student/chat/${roomId}`,\n            })\n            dispatch(privateConversation(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const getPrivateConversation2 = (roomId) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + `/api/student/chat/${roomId}`,\n            })\n            dispatch(privateConversation2(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const previousChats = (senderName) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + `/api/student/chat/previousChats/${senderName}`,\n            })\n            dispatch(previousChatsHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\n\nexport const newerChats = (receiverName) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + `/api/student/chat/newerChats/${receiverName}`,\n            })\n            dispatch(newerChatsHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const studentUpdate = (updatedData) => {\n    return async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + `/api/student/updateProfile`,\n                data: updatedData\n            })\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const getAllSubjects = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/getAllSubjects\"\n            })\n            dispatch(getAllSubjectsHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const fetchAttendence = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/checkAttendence\"\n            })\n            dispatch(fetchAttendenceHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    \n    }\n}\n\nexport const getMarks = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/getMarks\"\n            })\n           dispatch(getMarksHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in getting marks\", err.message)\n        }\n    }\n}\n\n\n\nexport const setStudentUser = data => {\n    return {\n        type: SET_STUDENT,\n        payload: data\n    };\n}\n\nexport const studentLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('studentJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setStudent({}));\n    };","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminLogin } from '../redux/action/adminAction'\nimport classnames from 'classnames'\n\n\n\nconst LoginPage = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch( )\n    const [registrationNumber, setRegistrationNumber] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n    useEffect(() => {\n        if (store.admin.isAuthenticated) {\n            history.push('/admin')\n        }\n    }, [store.admin.isAuthenticated])\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const fromHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminLogin({registrationNumber, password}))\n       \n    }\n\n    useEffect(() => {\n        if (store.error ||\n            store.admin.isAuthenticated) {\n            setIsLoading(false)\n        }\n        \n        else {\n            setIsLoading(true)\n        }\n    }, [store.error, store.admin.isAuthenticated])\n\n    \n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-8\">\n                    <div className=\"d-flex justify-content-md-center align-items-center vh-100\">\n                        <div>\n                            <h1 className=\"display-4 text-center\">ADMIN</h1>\n                            <form noValidate onSubmit={fromHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Registration Number</label>\n                                    <input onChange={(e) => setRegistrationNumber(e.target.value)} type=\"text\" value={registrationNumber} className={classnames(\"form-control form-control-lg\",\n                                        {'is-invalid' : error.registrationNumber\n                                        \n                                        })} id=\"emailId\" />\n                                    {error.registrationNumber && (<div className=\"invalid-feedback\">{error.registrationNumber}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">Password</label>\n                                    <input onChange={(e) => setPassword(e.target.value)} value={password} className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": error.password\n                                    })} value={password} type=\"password\" id=\"passwordId\" />\n                                    {error.password && (<div className=\"invalid-feedback\">{error.password}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n    )\n}\n\nexport default LoginPage\n","import React, {useState, useEffect} from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { studentLogout, newerChats, previousChats} from '../redux/action/studentAction'\n\n\nconst Home = () => {\n    const history = useHistory()\n    const store = useSelector((store) => store)\n    const [name, setName] = useState(\"\")\n    useEffect(() => {\n        if (store.student.student.student.name) {\n            setName(store.student.student.student.name)\n        }\n    }, [store.student.student.student.name])\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(newerChats(store.student.student.student.name))\n        dispatch(previousChats(store.student.student.student.name))\n    }, [store.student.newerChats.length])\n    const logoutHandler = () => {\n        dispatch(studentLogout())\n        history.push('/')\n    }\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light  bg-light\">\n                        <h4 className=\"navbar-brand mt-1\" href=\"\">SRM</h4>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item active\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/home\"><li>{name.toUpperCase()}</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/updateProfile\"><li>UPDATE PROFILE</li></Link></button>\n                                </li>\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        ACADEMIC </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                        <Link className=\"dropdown-item\" to=\"/student/testPerformance\">Test Performance</Link>\n                                        <Link className=\"dropdown-item\" to=\"/student/attendence\">Attendance</Link>\n                                        <Link className=\"dropdown-item\" to=\"/student/getAllSubjects\">Student Subject List</Link>\n                                    </div>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/studentDetails\"><li>STUDENTS</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/studentDetails\"><li>NEW CONVERSATION ({store.student.newerChats.length})</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/updatePassword\"><li>UPDATE PASSWORD</li></Link></button>\n                                </li>\n                               \n                            </ul>\n                           \n                        </div>\n                        <div>\n                            <button style={{listStyle:\"none\"}} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React,{useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport HomeHelper from '../Components/HomeHelper'\n\nconst Home = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-2\">\n\n                        </div>\n                        <div className=\"col-md-8 mt-5\">\n                            <div className=\"row\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.student.student.student.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.student.student.student.name}</h5>\n                                            <h5 className=\"card-title\">{store.student.student.student.registrationNumber}</h5>\n                                            <Link to='/student/updateProfile'>UPDATE PROFILE</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7 bg-dark  text-white\">\n                                    <table className=\"table \">\n                                        <tbody className=\"text-white\">\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.student.student.student.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.student.student.student.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.student.student.student.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Date Of Birth</td>\n                                                <td>{store.student.student.student.dob}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Year</td>\n                                                <td>{store.student.student.student.year}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>COURSE</td>\n                                                <td>{store.student.student.student.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Section</td>\n                                                <td>{store.student.student.student.section}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Batch</td>\n                                                <td>{store.student.student.student.batch}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Gender</td>\n                                                <td>{store.student.student.student.gender ? store.student.student.student.gender : \n                                                \n                                                   \"NA\"\n                                                }</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Contact Number</td>\n                                                <td>{store.student.student.student.studentMobileNumber ?\n                                                    store.student.student.student.studentMobileNumber : \"NA\"}</td>\n                                            </tr>\n                                           \n                                            <tr>\n                                                <td>Father Name</td>\n                                                <td>{store.student.student.student.fatherName ? store.student.student.student.fatherName : \"NA\" }</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Father Contact Number</td>\n                                                <td>{store.student.student.student.fatherMobileNumber ? store.student.student.student.fatherMobileNumber : \"NA\"}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-2\">\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </> : (history.push('/'))}\n        </div>\n\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n// import {newerChats, previousChats} from '../redux/action/studentAction'\nimport axios from 'axios'\nimport HomeHelper from '../Components/HomeHelper'\nimport {Link, useHistory } from 'react-router-dom'\n\nconst StudentDetails = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [department, setDepartment] = useState(\"\")\n    const [year, setYear] = useState(\"\")\n    const [section, setSection] = useState(\"\")\n    const [result, setResult] = useState([])\n\n\n\n    \n\n\n    const filterStudentHelper = async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: 'https://avi-stuman.herokuapp.com/api/student/getAllStudents',\n                data: {\n                    department,\n                    year,\n                    section\n                }\n            })\n            setResult(data.result)\n        }\n        catch (err) {\n            console.log(\"Error in student register action\", err.message)\n        }\n    }\n\n    const filterByNameHelper = async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: 'https://avi-stuman.herokuapp.com/api/student/getStudentByName',\n                data: {\n                    name\n                }\n            })\n            setResult(data.result)\n        }\n        catch (err) {\n            console.log(\"Error in student register action\", err)\n        }\n    }\n    \n\n    const formHandler = (e) => {\n        e.preventDefault()\n        if (name) {\n            filterByNameHelper()\n        }\n        else {\n            filterStudentHelper()\n        }\n    }\n  \n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    {result.length === 0 && <div className=\"row\">\n                        <div className=\"col-md-3 border mt-4\">\n                            <div className=\"row mt-3\">\n                                <div className=\"col mb-2\">\n                                    <form className=\"form-inline\" onSubmit={formHandler}>\n                                        <div className=\"form-group \">\n                                            <input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Search by name\" type=\"text\" className=\"form-control\" />\n                                        </div>\n                                        <button type=\"submit\" className=\"btn btn-block btn-info mt-1 \">Search</button>\n                                    </form>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center mt-4 mb-4 \">\n                                <div className=\"col\">\n                                    <form noValidate onSubmit={formHandler}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"branchId\">Branch</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className=\"form-control\" id=\"bramchId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"E.E.E\" >E.E.E</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"yearId\">Year</label>\n                                            <select onChange={(e) => setYear(e.target.value)} className=\"form-control\" id=\"yearId\">\n                                                <option>Select</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"sectionId\">Section</label>\n                                            <select onChange={(e) => setSection(e.target.value)} className=\"form-control\" id=\"sectionId\">\n                                                <option>Select</option>\n                                                <option value=\"A\">A</option>\n                                                <option value=\"B\">B</option>\n                                                <option value=\"C\">C</option>\n                                                <option value=\"D\">D</option>\n                                                <option value=\"E\">E</option>\n                                                <option value=\"F\">F</option>\n                                            </select>\n                                        </div>\n                                        <button type=\"submit\" className=\"btn btn-info btn-block\">Search</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-9 border mt-4\">\n                            <div className=\"row justify-content-center \">\n                                <div className=\"col\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6 border\">\n                                            <h4 className=\"text-center\">New Chats</h4>\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    {\n                                                        store.student.newerChats.map((res, index) =>\n                                                            <tr key={index}>\n                                                                <th scope=\"row\">{index + 1}</th>\n                                                                <td>{res.senderName}</td>\n                                                                <td><Link to={`/student/${res.senderRegistrationNumber}`}>Explore</Link></td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        <div className=\"col-md-6 border\">\n                                            <h4 className=\"text-center\">Older Chats</h4>\n                                            <table className=\"table\">\n                                                <tbody>\n                                                    {\n                                                        store.student.previousChats.map((res, index) =>\n                                                            <tr key={index}>\n                                                                <th scope=\"row\">{index + 1}</th>\n                                                                <td>{res.receiverName}</td>\n                                                                <td><Link to={`/student/${res.receiverRegistrationNumber}`}>Explore</Link></td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                </tbody>\n                                            </table>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>}\n\n                    {result.length !== 0 && <div className=\"row\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Chat</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {result.map((obj, index) =>\n                                        <tr key={index}>\n                                            <th scope=\"row\">{index + 1}</th>\n                                            <td>{obj.registrationNumber}</td>\n                                            <td>{obj.name}</td>\n                                            <td><Link to={`/student/${obj.registrationNumber}`}>Explore</Link></td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>}\n\n                </div></> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default StudentDetails\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { adminLogout } from '../redux/action/adminAction'\n\n\nconst Home = () => {\n    const store = useSelector(store => store)\n    const [name, setName] = useState(\"\")\n    useEffect(() => {\n\n        if (store.admin.admin.name) {\n            setName(store.admin.admin.name)\n        }\n    }, [store.admin.admin.name])\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const logoutHandler = () => {\n        dispatch(adminLogout())\n        history.push('/')\n    }\n    return (\n        <div className=\"container-fluid\">\n          \n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark  flex-column\">\n                <h4 className=\"navbar-brand mt-1\" href=\"\">STUDENT MANAGEMENT SYSTEM</h4>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item active\">\n                            <button type=\"button\" className=\"btn btn-secondary\"><Link to=\"/admin\"><li>{name.toUpperCase()}</li></Link></button>\n                        </li>\n                       \n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn btn-light\"><Link to=\"/admin/addStudent\"><li>ADD STUDENT</li></Link></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn btn-light\"><Link to=\"/admin/addSubject\"><li>ADD COURSE</li></Link></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn btn-light\"><Link to=\"/admin/addAdmin\"><li>ADD ADMIN</li></Link></button>\n                        </li>\n                      \n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn btn-light\"><Link to=\"/admin/allStudents\"><li>  SEARCH STUDENTS</li></Link></button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button type=\"button\" className=\"btn btn-light\"><Link to=\"/admin/allSubject\"><li>Courses</li></Link></button>\n                        </li>\n\n                    </ul>\n                </div>\n                <div>\n\n                    <button style={{ listStyle: \"None\" }} onClick={logoutHandler} type=\"button\" className=\"btn btn-danger\"><li>LOGOUT</li></button>\n\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddStudent } from '../redux/action/adminAction'\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\n\n\nconst AdminAddStudent = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [section, setSection] = useState('')\n    const [dob, setDob] = useState('')\n    const [gender, setGender] = useState('')\n    const [studentMobileNumber, setContactNumber] = useState('')\n    const [fatherName, setFatherName] = useState('')\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddStudent({\n            name,\n            email,\n            year,\n            department,\n            fatherName,\n            aadharCard,\n            gender,\n            section: section.toUpperCase(),\n            dob: dob.split(\"-\").reverse().join(\"-\"),\n            studentMobileNumber,\n            fatherMobileNumber\n        }))\n    } \n    useEffect(() => {\n        if (store.admin.adminAddStudentFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddStudentFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddStudentFlag) {\n            setIsLoading(false)\n        }\n    }, [store.error, store.admin.adminAddStudentFlag])\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <><AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Student Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">COURSE</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"E.E.E\">E.E.E</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"yearId\">Year</label>\n                                            <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.year\n                                                })} id=\"yearId\">\n                                                <option>Select</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                            </select>\n                                            {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                        </div>\n                                        \n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"sectionId\">Section</label>\n                                            <input onChange={(e) => setSection(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.section\n                                                })} id=\"sectionId\" />\n                                            {error.section && (<div className=\"invalid-feedback\">{error.section}</div>)}\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        \n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"genderId\">Gender</label>\n                                            <select onChange={(e) => setGender(e.target.value)} class=\"form-control\" id=\"genderId\">\n                                                <option>Select</option>\n                                                <option value=\"Male\">Male</option>\n                                                <option value=\"Female\">Female</option>\n                                                <option value=\"Other\">Other</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" class=\"form-control\" id=\"numberId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"fatherId\">Father Name</label>\n                                            <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" class=\"form-control\" id=\"fatherId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"fathercnId\">Father Contact Number</label>\n                                            <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\n                                        </div>\n                                       \n                                    </div>\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Student</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>:(history.push('/'))}\n            \n            </div>\n\n            \n      \n    )\n}\n\nexport default AdminAddStudent\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddFaculty } from '../redux/action/adminAction'\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\n\n\nconst AdminAddFaculty = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [designation, setDesignation] = useState('')\n    const [facultyMobileNUmber, setFacultyMobileNumber] = useState('')\n    const [dob, setDob] = useState('')\n    const [gender, setGender] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n           setError(store.error)\n       }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddFaculty({\n            name,\n            email,\n            designation,\n            facultyMobileNUmber,\n            department,\n            aadharCard,\n            gender,\n            dob: dob.split(\"-\").reverse().join(\"-\")}))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddFacultyFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddFacultyFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddFacultyFlag) {\n            setIsLoading(false)\n        }\n        else {\n            setIsLoading(true)\n        }\n    },[store.error,store.admin.adminAddFacultyFlag])\n    return (\n       \n        <div>\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper/>\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Faculty Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"designationId\">Designation</label>\n                                            <select onChange={(e) => setDesignation(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.designation\n                                                })} id=\"designationId\">\n                                                <option>Select</option>\n                                                <option value=\"Assistant Professor\">Assistant Professor</option>\n                                                <option value=\"Senior Professer\">Senior Professer</option>\n                                            </select>\n                                            {error.designation && (<div className=\"invalid-feedback\">{error.designation}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">COURSE</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                                <option value=\"E.E.E\">E.E.E</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"genderId\">Gender</label>\n                                            <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\n                                                <option>Select</option>\n                                                <option value=\"Male\">Male</option>\n                                                <option value=\"Female\">Female</option>\n                                                <option value=\"Other\">Other</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setFacultyMobileNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"numberId\" />\n                                        </div>\n                                       \n                                    </div>\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Add Faculty</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>):(history.push('/'))}\n            \n        </div>\n\n\n\n    )\n}\n\nexport default AdminAddFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddSubject } from '../redux/action/adminAction'\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\n\nconst AdminAddSubject = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [subjectName, setSubjectName] = useState('')\n    const [subjectCode, setSubjectCode] = useState('')\n    const [totalLectures, setTotalLectures] = useState('')\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddSubject({\n            subjectCode,\n            subjectName,\n            totalLectures,\n            department,\n            year\n        }))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddSubjectFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddSubjectFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddSubjectFlag) {\n            setIsLoading(false)\n        }\n    }, [store.error, store.admin.adminAddSubjectFlag])\n\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <> <AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-4\">\n                            <div className=\"d-flex justify-content-md-center vh-100\">\n                                <form noValidate onSubmit={formHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"snameId\">Subject Name</label>\n                                        <input onChange={(e) => setSubjectName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.subjectName\n                                            })} id=\"snameId\" />\n                                        {error.subjectName && (<div className=\"invalid-feedback\">{error.subjectName}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"scodeId\">Subject Code</label>\n                                        <input onChange={(e) => setSubjectCode(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.subjectCode\n                                            })} id=\"scodeId\" />\n                                        {error.subjectCode && (<div className=\"invalid-feedback\">{error.subjectCode}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"totalLectures\">Total Lectures</label>\n                                        <input onChange={(e) => setTotalLectures(e.target.value)} type=\"number\" className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.totalLectures\n                                            })} id=\"totalLectures\" />\n                                        {error.totalLectures && (<div className=\"invalid-feedback\">{error.totalLectures}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"departmentId\">COURSE</label>\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.department\n                                            })} id=\"departmentId\">\n                                            <option>Select</option>\n                                            <option value=\"E.C.E\">E.C.E</option>\n                                            <option value=\"E.E.E\">E.E.E</option>\n                                            <option value=\"C.S.E\">C.S.E</option>\n                                            <option value=\"I.T\">I.T</option>\n                                            <option value=\"Mechanical\">Mechanical</option>\n                                            <option value=\"Civil\">Civil</option>\n                                        </select>\n                                        {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"yearId\">Year</label>\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.year\n\n                                            })} id=\"yearId\">\n                                            <option>Select</option>\n                                            <option value=\"1\">1</option>\n                                            <option value=\"2\">2</option>\n                                            <option value=\"3\">3</option>\n                                            <option value=\"4\">4</option>\n                                        </select>\n\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Subject</button>}\n                                   \n                                    \n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div></>: (history.push('/'))}\n        </div>\n    )\n}\n\nexport default AdminAddSubject\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {fetchAttendence} from '../redux/action/studentAction'\n\nimport axios from 'axios'\nimport HomeHelper from '../Components/HomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst Home = () => {\n    const store = useSelector(store => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n      dispatch(fetchAttendence())  \n    },[])\n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Subject Code</th>\n                                        <th scope=\"col\">Subject Name</th>\n                                        <th scope=\"col\">Maximum Hours</th>\n                                        <th scope=\"col\">Present Hours</th>\n                                        <th scope=\"col\">Absent Hours</th>\n                                        <th scope=\"col\">Total Hours</th>\n                                        <th scope=\"col\">Attendence</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.student.attendence.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.subjectCode}</td>\n                                                <td>{res.subjectName}</td>\n                                                <td>{res.maxHours}</td>\n                                                <td>{res.lectureAttended}</td>\n                                                <td>{res.absentHours}</td>\n                                                <td>{res.totalLecturesByFaculty}</td>\n                                                <td>{res.attendence}%</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n           \n            \n        </div>\n\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport HomeHelper from '../Components/HomeHelper'\nimport { studentUpdatePassword } from '../redux/action/studentAction'\n\n\n\n\nconst StudentUpdatePassword = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\n    const [error, setError] = useState({})\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setError(store.errorHelper)\n            console.log(store.errorHelper)\n        }\n    }, [store.errorHelper])\n    const formHandler = (e) => {\n        e.preventDefault()\n        dispatch(studentUpdatePassword({ registrationNumber: store.student.student.student.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\n    }\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container m-5\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-5 m-auto\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Old Password</label>\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.oldPassword\n\n                                        })} id=\"emailId\" />\n                                    {error.oldPassword && (<div className=\"invalid-feedback\">{error.oldPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.newPassword\n                                    })} value={newPassword} type=\"password\" id=\"passwordId\" />\n                                    {error.newPassword && (<div className=\"invalid-feedback\">{error.newPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.confirmNewPassword\n                                    })} value={confirmNewPassword} type=\"password\" id=\"passwordCId\" />\n                                    {error.confirmNewPassword && (<div className=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\n                                </div>\n                                <button type=\"submit\" class=\"btn btn-info btn-block \">Update Password</button>\n                            </form>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n\n           \n\n        </div>\n    )\n}\n\nexport default StudentUpdatePassword\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { getOTPStudent, submitOTPStudent } from '../redux/action/studentAction'\nimport { getOTPFaculty, submitOTPFaculty } from '../redux/action/facultyAction'\nimport classnames from 'classnames'\n\n\nconst ForgotPassword = (props) => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [user, setUser] = useState('')\n    const [email, setEmail] = useState('')\n    const [otp, setOtp] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\")\n    const [errors, setErrors] = useState({})\n    const [helper, setHelper] = useState(false)\n\n    useEffect(() => {\n        setUser(props.match.params.user)\n    }, [user])\n\n    useEffect(() => {\n        if (store.error) {\n            setErrors(store.error)\n        }\n    }, [store.error])\n\n    useEffect(() => {\n        if (store.student.flag) {\n            setHelper(true)\n        }\n    },[store.student.flag])\n\n    const sendOTPHandler = (e) => {\n        e.preventDefault()\n        if (user === \"student\") {\n            dispatch(getOTPStudent({ email }))\n        }\n        else if (user === \"faculty\") {\n           dispatch(getOTPFaculty({email}))\n        }\n    }\n\n    const submitOTPHandler = (e) => {\n        e.preventDefault()\n        if (user === \"student\") {\n            dispatch(submitOTPStudent({ email, otp, newPassword, confirmNewPassword },history))\n        }\n        else if (user === \"faculty\")\n        {\n            dispatch(submitOTPFaculty({ email, otp, newPassword, confirmNewPassword }, history))\n            }\n    }\n\n\n\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-4 m-auto\">\n                    {!helper ? <>\n                        <form noValidate onSubmit={sendOTPHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail11\">Email</label>\n                                <input onChange={(e) => setEmail(e.target.value)} value={email} type=\"email\" className={classnames('form-control', {\n                                    'is-invalid': errors.email\n                                })} id=\"exampleInputEmail11\" placeholder=\"Provide our registered email\" aria-describedby=\"emailHelp\" />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">OTP will be only valid for 5 minute.</small>\n                                {errors.email && (\n                                    <div className=\"invalid-feedback\">{errors.email}</div>\n                                )}\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Send OTP</button>\n                        </form>\n                    </> : <>\n                            <form noValidate onSubmit={submitOTPHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail1\">OTP</label>\n                                    <input onChange={(e) => setOtp(e.target.value)} value={otp} type=\"number\" className={classnames('form-control', {\n                                        'is-invalid': errors.otp\n                                    })} id=\"exampleInputEmail1\" />\n                                    {errors.otp && (\n                                        <div className=\"invalid-feedback\">{errors.otp}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail2\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.newPassword\n                                    })} id=\"exampleInputEmail2\" />\n                                    {errors.newPassword && (\n                                        <div className=\"invalid-feedback\">{errors.newPassword}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail3\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.confirmNewPassword\n                                    })} id=\"exampleInputEmail3\" />\n                                    {errors.confirmNewPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmNewPassword}</div>\n                                    )}\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                            </form>\n                        </>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ForgotPassword)\n","import React, {useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport { getStudentByRegName } from '../redux/action/studentAction'\nimport HomeHelper from '../Components/HomeHelper'\n\nconst RecieverUserDetails = (props) => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const [registrationNumber, setRegistrationNumber] = useState(\"\")\n  \n\n\n    useEffect(() => {\n        setRegistrationNumber(props.match.params.registrationNumber)\n        dispatch(getStudentByRegName(registrationNumber))\n        \n    }, [registrationNumber]) \n\n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-2\">\n\n                        </div>\n                        <div className=\"col-md-8\">\n                            <div className=\"row\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.student.regNumStudent.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.student.regNumStudent.name}</h5>\n                                            <h5 className=\"card-title\">{}</h5>\n                                            <Link to={`/chat/${store.student.regNumStudent.registrationNumber}.${store.student.student.student.registrationNumber}`}>CHAT</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <table className=\"table border\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.student.regNumStudent.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.student.regNumStudent.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.student.regNumStudent.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Year</td>\n                                                <td>{store.student.regNumStudent.year}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>COURSE</td>\n                                                <td>{store.student.regNumStudent.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Section</td>\n                                                <td>{store.student.regNumStudent.section}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Batch</td>\n                                                <td>{store.student.regNumStudent.batch}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-2\">\n\n                        </div>\n\n                    </div>\n                </div>\n\n\n\n\n\n            </> : (history.push('/'))}\n        </div>\n\n    )\n}\n\nexport default RecieverUserDetails\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport { studentUpdate, studentLogout,newerChats, previousChats } from '../redux/action/studentAction'\nimport HomeHelper from '../Components/HomeHelper'\n\nimport { useHistory, withRouter } from 'react-router-dom'\n\nconst StudentUpdateProfile = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [gender, setGender] = useState('')\n    const [studentMobileNumber, setContactNumber] = useState('')\n    const [fatherName, setFatherName] = useState('')\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [avatar, setAvatar] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const [modal, setModal] = useState(false)\n    const imagehandler = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            let img = e.target.files[0]\n            setAvatar(img)\n        }\n    }\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const formHandler = async(e) => {\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"gender\", gender)\n        formData.append(\"studentMobileNumber\", studentMobileNumber)\n        formData.append(\"fatherName\", fatherName)\n        formData.append(\"fatherMobileNumber\", fatherMobileNumber)\n        formData.append(\"aadharCard\", aadharCard)\n        formData.append(\"avatar\", avatar)\n        formData.append(\"email\", store.student.student.student.email)\n        dispatch(studentUpdate(formData, history))\n        setModal(true)\n        alert(\"Kindly login again to see updates\")\n        dispatch(studentLogout())\n        history.push('/')\n    }\n        return (\n            <div>\n                {store.student.isAuthenticated ? <>\n                    <HomeHelper />\n                    <div className=\"container mt-5\">\n                        <div className=\"row \">\n                            <div className=\"col-md-5 w-100 m-auto\">\n                                <form onSubmit={formHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"inputId\">Profile Picture</label>\n                                        <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"genderId\">Gender</label>\n                                        <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\n                                            <option>Select</option>\n                                            <option value=\"Male\">Male</option>\n                                            <option value=\"Female\">Female</option>\n                                            <option value=\"Other\">Other</option>\n                                        </select>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"numberId\">Contact Number</label>\n                                        <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" className=\"form-control\" id=\"numberId\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"fatherId\">Father Name</label>\n                                        <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" className=\"form-control\" id=\"fatherId\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"fathercnId\">Father Contact Number</label>\n                                        <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\n                                    </div>\n                                   \n                                    <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </> : (history.push('/'))}\n                \n            </div>\n        )\n    }\n\nexport default withRouter(StudentUpdateProfile)\n","import React, {useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllSubjects } from '../../redux/action/studentAction'\nimport HomeHelper from '../../Components/HomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst StudentSubjectList = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    useEffect(() => {\n       dispatch(getAllSubjects())\n    },[])\n    return (\n        <>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Subject Code</th>\n                                        <th scope=\"col\">Subject Name</th>\n                                        <th scope=\"col\">Year</th>\n                                        <th scope=\"col\">Total Lectures</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.student.allSubjects.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.subjectCode}</td>\n                                                <td>{res.subjectName}</td>\n                                                <td>{res.year}</td>\n                                                <td>{res.totalLectures}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n           \n            </>\n    )\n}\n\nexport default StudentSubjectList\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getMarks } from '../../redux/action/studentAction'\nimport HomeHelper from '../../Components/HomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst StudentTestPerformance = () => {\n    const store = useSelector(store => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getMarks())\n    }, [])\n\n\n\n    return (\n\n        <>\n            {store.student.isAuthenticated ? <>\n                <HomeHelper />\n\n                <div className=\"container\">\n\n                    {store.student.allMarks.CycleTest1 &&\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-8 m-auto\">\n                                {store.student.allMarks.CycleTest1.length !== 0 ? <>\n                                    <h4>Cycle Test 1</h4>\n                                    <table className=\"table border\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">S.No</th>\n                                                <th scope=\"col\">Subject Code</th>\n                                                <th scope=\"col\">Subject Name</th>\n                                                <th scope=\"col\">Obtained Marks</th>\n                                                <th scope=\"col\">Total Marks</th>\n                                                <th scope=\"col\">Percentage</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                store.student.allMarks.CycleTest1.map((res, index) =>\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td>{res.subject.subjectCode}</td>\n                                                        <td>{res.subject.subjectName}</td>\n                                                        <td>{res.marks}</td>\n                                                        <td>{res.totalMarks}</td>\n                                                        <td>{(res.marks / res.totalMarks) * 100}%</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </table></> : null}\n                            </div>\n                        </div>\n\n\n                    }\n\n                    {store.student.allMarks.CycleTest2 &&\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-8 m-auto\">\n                                {store.student.allMarks.CycleTest2.length !== 0 ? <>\n                                    <h4>Cycle Test 2</h4>\n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">S.No</th>\n                                                <th scope=\"col\">Subject Code</th>\n                                                <th scope=\"col\">Subject Name</th>\n                                                <th scope=\"col\">Obtained Marks</th>\n                                                <th scope=\"col\">Total Marks</th>\n                                                <th scope=\"col\">Percentage</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                store.student.allMarks.CycleTest2.map((res, index) =>\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td>{res.subject.subjectCode}</td>\n                                                        <td>{res.subject.subjectName}</td>\n                                                        <td>{res.marks}</td>\n                                                        <td>{res.totalMarks}</td>\n                                                        <td>{(res.marks / res.totalMarks) * 100}%</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </table></> : null}\n                            </div>\n                        </div>\n                    }\n\n                    {store.student.allMarks.Semester &&\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-8 m-auto\">\n                                {store.student.allMarks.Semester.length !== 0 ? <>\n                                    <h4>Semester</h4>\n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">S.No</th>\n                                                <th scope=\"col\">Subject Code</th>\n                                                <th scope=\"col\">Subject Name</th>\n                                                <th scope=\"col\">Obtained Marks</th>\n                                                <th scope=\"col\">Total Marks</th>\n                                                <th scope=\"col\">Percentage</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                store.student.allMarks.Semester.map((res, index) =>\n                                                    <tr key={index}>\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td>{res.subject.subjectCode}</td>\n                                                        <td>{res.subject.subjectName}</td>\n                                                        <td>{res.marks}</td>\n                                                        <td>{res.totalMarks}</td>\n                                                        <td>{((res.marks / res.totalMarks) * 100).toFixed(2)}%</td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </table></> : null}\n                            </div>\n                        </div>\n\n                    }\n                </div></> : (history.push('/'))}\n\n        </>\n\n    )\n}\n\nexport default StudentTestPerformance\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddAdmin } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\n\n\n\nconst AdminAddAdmin = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [dob, setDob] = useState('')\n    const [contactNumber, setContactNumber] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n        else {\n            setError({})\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddAdmin({\n            name,\n            email,\n            department,\n            contactNumber,\n            dob: dob.split(\"-\").reverse().join(\"-\")\n        }))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddAdminFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddAdminFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddAdminFlag) {\n            setIsLoading(false)\n        }\n        else {\n            setIsLoading(true)\n        }\n    }, [store.error, store.admin.adminAddAdminFlag])\n\n    return (\n\n        <div>\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Admin Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">COURSE</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                                <option value=\"E.E.E\">E.E.E</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setContactNumber(e.target.value)} type=\"number\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.contactNumber\n                                                })} id=\"numberId\" />\n                                            {error.contactNumber && (<div className=\"invalid-feedback\">{error.contactNumber}</div>)}\n                                        </div>\n                                    </div>\n                                </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Admin</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>) : (history.push('/'))}\n\n        </div>\n\n\n\n    )\n}\n\nexport default AdminAddAdmin\n\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllFaculty } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\nimport classnames from 'classnames'\n\nconst AdminGetAllFaculty = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllFaculty({ department }))\n    }\n\n    useEffect(() => {\n        if (store.admin.allFaculty.length !== 0) {\n            setIsLoading(false)\n        }\n        \n    }, [store.admin.allFaculty.length])\n\n    \n    return (\n        <div>\n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-4\">\n                            <form form-inline noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"departmentId\">COURSE</label>\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.department\n                                        })} id=\"departmentId\">\n                                        <option>Select</option>\n                                        <option value=\"E.C.E\">E.C.E</option>\n                                        <option value=\"C.S.E\">C.S.E</option>\n                                        <option value=\"E.E.E\">E.E.E</option>\n                                        <option value=\"I.T\">I.T</option>\n                                        <option value=\"Mechanical\">Mechanical</option>\n                                        <option value=\"Civil\">Civil</option>\n                                    </select>\n                                    {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                            </form>\n\n\n                        </div>\n                        <div className=\"col-md-8\">\n                            \n                            {store.admin.allFaculty.length !== 0 && <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">Joining Year</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.admin.allFaculty.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.registrationNumber}</td>\n                                                <td>{res.name}</td>\n                                                <td>{res.email}</td>\n                                                <td>{res.joiningYear}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>}\n                           \n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n        </div>\n    )\n}\n\nexport default AdminGetAllFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllStudent } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\nimport classnames from 'classnames'\n\nconst AdminGetAllFaculty = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    \n    \n\n    const [error, setError] = useState({})\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllStudent({ department, year }))\n    }\n\n    useEffect(() => {\n        if (store.admin.allStudent.length !== 0) {\n            setIsLoading(false)\n        }\n\n    }, [store.admin.allStudent.length])\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-4\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"departmentId\">COURSE</label>\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.department\n                                        })} id=\"departmentId\">\n                                        <option>Select</option>\n                                        <option value=\"E.C.E\">Electronics</option>\n                                        <option value=\"C.S.E\">Computer</option>\n                                        <option value=\"I.T\">Info tech</option>\n                                        <option value=\"E.E.E\">Electrical</option>\n                                        <option value=\"Mechanical\">Mechanical</option>\n                                        <option value=\"Civil\">Civil</option>\n                                    </select>\n                                    {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"yearId\">Year</label>\n                                    <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.year\n                                        })} id=\"yearId\">\n                                        <option>Select</option>\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                    </select>\n                                    {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                              \n                               \n                            </form>\n\n\n                        </div>\n                        <div className=\"col-md-8\">\n\n                            {store.admin.allStudent.length !== 0 && <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">Section</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.admin.allStudent.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.registrationNumber}</td>\n                                                <td>{res.name}</td>\n                                                <td>{res.email}</td>\n                                                <td>{res.section}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>}\n\n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n        </div>\n    )\n}\n\nexport default AdminGetAllFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllSubject } from '../../redux/action/adminAction'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\nimport classnames from 'classnames'\n\nconst AdminGetAllSubjects = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllSubject({ department, year }))\n\n    }\n    useEffect(() => {\n        if (store.admin.allSubject.length !== 0) {\n            setIsLoading(false)\n        }\n\n    }, [store.admin.allSubject.length])\n    return (\n        <div>\n            <div>\n                {store.admin.isAuthenticated ? <>\n                    <AdminHomeHelper />\n                    <div className=\"container\">\n                        <div className=\"row mt-5\">\n                            <div className=\"col-md-4\">\n                                <form noValidate onSubmit={formHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"departmentId\">COURSE</label>\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.department\n                                            })} id=\"departmentId\">\n                                            <option>Select</option>\n                                            <option value=\"E.C.E\">E.C.E</option>\n                                            <option value=\"C.S.E\">C.S.E</option>\n                                            <option value=\"E.E.E\">E.E.E</option>\n                                            <option value=\"I.T\">I.T</option>\n                                            <option value=\"Mechanical\">Mechanical</option>\n                                            <option value=\"Civil\">Civil</option>\n                                        </select>\n                                        {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"yearId\">Year</label>\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.year\n                                            })} id=\"yearId\">\n                                            <option>Select</option>\n                                            <option value=\"1\">1</option>\n                                            <option value=\"2\">2</option>\n                                            <option value=\"3\">3</option>\n                                            <option value=\"4\">4</option>\n                                        </select>\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                                   \n                                </form>\n\n\n                            </div>\n                            <div className=\"col-md-8\">\n\n                                {store.admin.allSubject.length !== 0 && <table className=\"table border\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">S.No</th>\n                                            <th scope=\"col\">Subject Code</th>\n                                            <th scope=\"col\">Subject Name</th>\n                                            <th scope=\"col\">Total Lectures</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            store.admin.allSubject.map((res, index) =>\n                                                <tr key={index}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td>{res.subjectCode}</td>\n                                                    <td>{res.subjectName}</td>\n                                                    <td>{res.totalLectures}</td>\n                                                </tr>\n                                            )\n                                        }\n                                    </tbody>\n                                </table>}\n\n                            </div>\n                        </div>\n                    </div>\n                </> : (history.push('/'))}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default AdminGetAllSubjects\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom'\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\nimport '../../Style/facultyStudentLogin.css'\n\n\nconst AdminHome = () => {\n    const store = useSelector((store) => store)\n\n    const history = useHistory()\n    return (\n        <div id='trail'>\n           \n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\" >\n                    <div className=\"row mt-5\">\n                        <div className=\"col-2\">\n                        </div>\n                        <div className=\"col-lg-8\">\n                            <div className=\"row\">\n                            <div className=\"col-md-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">ADMIN PANEL</h5>\n                                            {/* <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link> */}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.admin.admin.name}</h5>\n                                            <h5 className=\"card-title\">{store.admin.admin.registrationNumber}</h5>\n                                            {/* <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link> */}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <table className=\"table border\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.admin.admin.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.admin.admin.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.admin.admin.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Joining Year</td>\n                                                <td>{store.admin.admin.joiningYear}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>COURSE</td>\n                                                <td>{store.admin.admin.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Contact Number</td>\n                                                <td>{store.admin.admin.contactNumber ?\n                                                    store.admin.admin.contactNumber : \"NA\"}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-2\">\n                        </div>\n                    </div>\n                </div>\n                </> : (history.push('/'))}\n                \n        </div>\n    )\n}\n\nexport default AdminHome\n","import React from 'react';\nimport {useSelector} from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './redux/utils/setAuthToken'\nimport store from './redux/store'\n\nimport { setFacultyUser, facultyLogout } from './redux/action/facultyAction'\n\nimport { setAdminUser, adminLogout } from './redux/action/adminAction'\n\nimport { setStudentUser, studentLogout } from './redux/action/studentAction'\n\n\nimport LoginPage from './Pages/LoginPage'\nimport Home from './Pages/StudentHome'\n\n\nimport StudentDetails from './Pages/StudentDetails'\n\nimport AdminAddStudent from './Pages/AdminAddStudent'\nimport AdminAddFaculty from './Pages/AdminAddFaculty'\nimport AdminAddSubject from './Pages/AdminAddSubject'\nimport StudentAttendencePage from './Pages/StudentAttendencePage'\nimport StudentUpdatePassword from './Pages/StudentUpdatePassword'\nimport ForgotPassword from './Pages/ForgotPassword'\nimport Chat from './Pages/Chat'\nimport RecieverUserDetails from './Pages/RecieverUserDetails'\nimport StudentUpdateProfile from './Pages/StudentUpdateProfile'\n \nimport StudentSubjectList from './Pages/Student/StudentSubjectList'\n\n\n\nimport StudentTestPerformace from './Pages/Student/StudentTestPerformance'\n\nimport AdminAddAdmin from './Pages/Admin/AdminAddAdmin'\n\nimport AdminGetAllFaculty from './Pages/Admin/AdminGetAllFaculty'\n\nimport AdminGetAllStudent from './Pages/Admin/AdminGetAllStudents'\n\nimport AdminGetAllSubject from './Pages/Admin/AdminGetAllSubjects'\n\nimport AdminHome from './Pages/Admin/AdminHome'\n \nif (window.localStorage.facultyJwtToken) {\n  setAuthToken(localStorage.facultyJwtToken);\n  const decoded = jwt_decode(localStorage.facultyJwtToken);\n \n  store.dispatch(setFacultyUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(facultyLogout());\n    window.location.href = '/';\n  }\n}\nelse if (window.localStorage.studentJwtToken) {\n  setAuthToken(localStorage.studentJwtToken);\n  const decoded = jwt_decode(localStorage.studentJwtToken);\n\n  store.dispatch(setStudentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(studentLogout());\n    window.location.href = '/';\n  } \n}\nelse if (window.localStorage.adminJwtToken) {\n  setAuthToken(localStorage.adminJwtToken);\n  const decoded = jwt_decode(localStorage.adminJwtToken);\n\n  store.dispatch(setAdminUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(adminLogout());\n    window.location.href = '/';\n  } \n}\n\nfunction App() {\n  const store = useSelector((store)=>store)\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={LoginPage} />\n          <Route exact path='/home' component={Home} />\n          <Route exact path='/student/updateProfile' component={StudentUpdateProfile} />\n          <Route exact path=\"/studentDetails\" component={StudentDetails} />\n          <Route exact path='/admin' component={AdminHome} />\n          <Route exact path=\"/admin/addStudent\" component={AdminAddStudent} />\n          <Route exact path=\"/admin/addFaculty\" component={AdminAddFaculty} />\n          <Route exact path=\"/admin/addSubject\" component={AdminAddSubject} />\n          <Route exact path=\"/admin/addAdmin\" component={AdminAddAdmin} />\n          <Route exact path=\"/admin/allFaculties\" component={AdminGetAllFaculty} />\n          <Route exact path=\"/admin/allStudents\" component={AdminGetAllStudent} />\n          <Route exact path=\"/admin/allSubject\" component={AdminGetAllSubject} />\n          <Route exact path=\"/student/attendence\" component={StudentAttendencePage} />\n          <Route exact path=\"/student/updatePassword\" component={StudentUpdatePassword} />\n          <Route exact path=\"/student/testPerformance\" component={StudentTestPerformace} />\n          <Route exact path=\"/student/getAllSubjects\" component={StudentSubjectList} />\n          <Route exact path=\"/forgotPassword/:user\" component={ForgotPassword} />\n          <Route exact path=\"/chat/:room\" component={Chat} />\n          <Route exact path=\"/student/:registrationNumber\" component={RecieverUserDetails} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}